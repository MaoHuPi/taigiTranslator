# -*- coding: utf-8 -*-
"""taigiTranslator.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1STQE0mMaETed1UA-XISi33eEUTWmUK9M

# Taigi Translator

> v1.0.0
>
> 2023 © MaoHuPi

## description

### 使用方法

1. 點擊上方工具列的「執行階段」
2. 選擇「全部執行」
3. 等待執行至互動介面出現
4. 捲動至頁面底部的互動介面
5. 在輸入框「content」內輸入要翻譯之文字
6. 點擊「submit」送出文字
7. 等待翻譯完成
8. 複製翻譯輸出並貼至其他地方 (`此工具外`)
9. 針對翻譯錯誤之處手動修正 (`此工具外`)
10. 重複步驟5~9來完成所需之翻譯工作

### 其他備註

* 此專案接取「查詢用網站」及「演示網站」之API來運作，若遇「錯誤」或「抓取無回應」，可以多試幾次（包含但不限於「重新送出文字」與「重新整理頁面」）
* 此工具講求效率，而非精確度，翻錯乃code之常情
* 此工具由`貓虎皮`開發，若有使用方面之問題，或使用時發生錯誤，歡迎聯繫之
* 此工具之開發者英文不及格，若有變數名稱打錯，或標題命名不精確，屬正常現象
* 國文也沒有好到哪裡去，所以如果使用發法看不懂，那就是你的問題了
* 日後會再針對結果挑選部分進行改善，如果開發者有時間的話

# code

## method
"""

#@title import & basic method
import os, sys
import json
import http.cookiejar as cookiejar
import requests
import re

def requestsWebsite(mode = 'GET', url = '', cookie = {}, formData = {}, jsonData = {}, allow_redirects = True):
    r = getattr(requests, mode.lower())(url, cookies = cookie, data = formData, json = jsonData, allow_redirects = allow_redirects)
    r.status = r.status_code
    r.data = r.text
    if r.status != 200:
        print('{mode} {url}: {status}'.format(mode = mode, url= url, status = r.status))
    # print(r.cookies)
    return(r)

#@title taigi function (單辭翻譯)
def taigi(word):
  word = word.replace(' ', '')
  defaultReturn = [{'word': word, 'pinyin': word, 'meaning': [word]}]

  markDict = {}
  marks = '，。？！：（）｛｝［］；、～《》「」『』\/'
  marks2 = ',.?!:(){}[];,~""""\'\'\/'
  for i in range(len(marks)):
    markDict[marks[i]] = marks2[i]
  markDictGet = markDict.get(word, None)
  if markDictGet != None:
    defaultReturn[0]['word'] = word
    defaultReturn[0]['pinyin'] = markDictGet
    defaultReturn[0]['meaning'] = [word]
    return(defaultReturn)
  
  url = f'https://itaigi.tw/%E5%B9%B3%E8%87%BA%E9%A0%85%E7%9B%AE%E5%88%97%E8%A1%A8/%E6%8F%A3%E5%88%97%E8%A1%A8?%E9%97%9C%E9%8D%B5%E5%AD%97={word}'
  # print(url)
  page = requestsWebsite(mode = 'GET', url = url)
  try:
    data = json.loads(page.data)
  except:
    print(page)
    return(defaultReturn)

  if len(data['列表']) < 1: return(defaultReturn)
  data = data['列表'][0]['新詞文本']
  data = list(map(lambda i: {'word': i['文本資料'], 'pinyin': i['音標資料'], 'meaning': list(map(lambda j: j['外語資料'], i['按呢講的外語列表']))}, data))
  return(data)

#@title ckip function (中文斷詞)
def ckip(text):
  defaultReturn = []
  url = 'https://ckip.iis.sinica.edu.tw/api/corenlp/?ws=0&ner=1'
  # print(url)
  page = requestsWebsite(mode = 'POST', url = url, jsonData = {'text': text})
  try:
    data = json.loads(page.data)
  except:
    print(page)
    return(defaultReturn)
  
  ws = data['ws']
  nerDict = {}
  if len(data['ner']) < 1: return(defaultReturn)
  returnList = []
  for l in range(len(data['ws'])):
    for i in range(len(data['ner'][l])):
      nerDict[data['ner'][l][i]['text']] = data['ner'][l][i]['ner']
    returnList.append(list(map(lambda d: {'word': d['word'], 'ner': nerDict.get(d['word'], None)}, ws[l])))
  return(returnList)

#@title translate function (最終翻譯)
def translate(content):
  returnList = []
  ckipResult = ckip(content)
  # print(ckipResult)
  for line in ckipResult:
    if len(line) < 1:
      returnList.append('')
      returnList.append('')
      continue
    data = list(map(lambda d: taigi(d['word']), line))
    wordLine = ''
    pinyinList = []
    for d in data:
      try:
        wordLine += d[0]['word']
        pinyinList.append(d[0]['pinyin'])
      except:
        print(d)
    pinyinLine = ' '.join(pinyinList)
    for noSpacePinyin in ['--ê']:
      pinyinLine = pinyinLine.replace(f' {noSpacePinyin}', noSpacePinyin)
    pinyinLine = re.sub(r' ([!-\/]|[:-@]|[\[-\`]\w+)( |\n|$)', r'\1 ', pinyinLine)
    for markGroup in ['\'\'', '\"\"', ['\(', '\)'], ['\[', '\]']]:
      pinyinLine = re.sub(rf'{markGroup[0]} (.[^{markGroup[1]}]*\w+){markGroup[1]} ', rf' {markGroup[0]}\1{markGroup[1]} ', pinyinLine)
    returnList.append(wordLine)
    returnList.append(pinyinLine)
  return('\n'.join(returnList))

"""## interface"""

#@title install gradio
# !pip install gradio

#@title gui settings
import gradio as gr
gui = gr.Interface(
    title = 'Taigi Translator', 
    fn=translate, 
    inputs=gr.Textbox(lines=2, placeholder = 'Content Here...'), 
    outputs = 'text'
)

"""# interface"""

#@title launch gui
gui.launch()
